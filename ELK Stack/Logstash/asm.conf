input {
    syslog {
      port => 5244
    }
   }
   filter {
    grok {
      match => {
        "message" => [
          "attack_type=\"%{DATA:attack_type}\"",
          "management_ip_address=\"%{IP:management_ip_address}\"",
          ",blocking_exception_reason=\"%{DATA:blocking_exception_reason}\"",
          ",date_time=\"%{DATA:date_time}\"",
          ",dest_port=\"%{DATA:dest_port}\"",
          ",ip_client=\"%{DATA:ip_client}\"",
          ",is_truncated=\"%{DATA:is_truncated}\"",
          ",method=\"%{DATA:method}\"",
          ",policy_name=\"%{DATA:policy_name}\"",
          ",protocol=\"%{DATA:protocol}\"",
          ",request_status=\"%{DATA:request_status}\"",
          ",response_code=\"%{DATA:response_code}\"",
          ",severity=\"%{DATA:severity}\"",
          ",sig_cves=\"%{DATA:sig_cves}\"",
          ",sig_ids=\"%{DATA:sig_ids}\"",
          ",sig_names=\"%{DATA:sig_names}\"",
          ",sig_set_names=\"%{DATA:sig_set_names}\"",
          ",src_port=\"%{DATA:src_port}\"",
          ",sub_violations=\"%{DATA:sub_violations}\"",
          ",support_id=\"%{DATA:support_id}\"",
          "unit_hostname=\"%{DATA:unit_hostname}\"",
          ",uri=\"%{DATA:uri}\"",
          ",violation_rating=\"%{DATA:violation_rating}\"",
          ",vs_name=\"%{DATA:vs_name}\"",
          ",x_forwarded_for_header_value=\"%{DATA:x_forwarded_for_header_value}\"",
          ",outcome=\"%{DATA:outcome}\"",
          ",outcome_reason=\"%{DATA:outcome_reason}\"",
          ",violations=\"%{DATA:violations}\"",
          ",violation_details=\"%{DATA:violation_details}\"",
          ",request=\"%{DATA:request}\""
        ]
      }
      break_on_match => false
    }
    mutate {
      remove_field => ["message", "event"]
      split => { "attack_type" => "," }
      split => { "sig_ids" => "," }
      split => { "sig_names" => "," }
      split => { "sig_cves" => "," }
      split => { "staged_sig_ids" => "," }
      split => { "staged_sig_names" => "," }
      split => { "staged_sig_cves" => "," }
      split => { "sig_set_names" => "," }
      split => { "threat_campaign_names" => "," }
      split => { "staged_threat_campaign_names" => "," }
      split => { "violations" => "," }
      split => { "sub_violations" => "," }
    }
    if [x_forwarded_for_header_value] != "N/A" {
      mutate { add_field => { "source_host" => "%{x_forwarded_for_header_value}"}}
    } else {
      mutate { add_field => { "source_host" => "%{ip_client}"}}
    }
    geoip {
      source => "source_host"
      target => "geoip"
    }
   }

output {
  elasticsearch {
    hosts => ["https://elasticsearch-es-http:9200"]
    user => "elastic"
    password => "<elasticsearch-password"
    #ssl_certificate_authorities => ["/etc/logstash/certificate/ca.crt"]
    ssl_verification_mode => "none"
    index => "waf-logs-write"
    ilm_enabled => true
    ilm_policy => "waf-policy"
    ilm_rollover_alias => "waf-logs"
    ecs_compatibility => "disabled"
  }
}